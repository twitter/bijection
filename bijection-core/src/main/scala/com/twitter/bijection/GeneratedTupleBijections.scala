// Autogenerated code DO NOT EDIT BY HAND
package com.twitter.bijection

trait GeneratedTupleBijections {
  implicit def tuple2[A1,B1,A2,B2](implicit ba: Bijection[A1,A2], bb: Bijection[B1,B2]):
    Bijection[(A1,B1), (A2,B2)] = new Bijection[(A1,B1), (A2,B2)] {
      def apply(in: (A1,B1)) = (ba(in._1), bb(in._2))
      override def invert(out: (A2,B2)) = (ba.invert(out._1), bb.invert(out._2))
    }
  implicit def tuple3[A1,B1,C1,A2,B2,C2](implicit ba: Bijection[A1,A2], bb: Bijection[B1,B2], bc: Bijection[C1,C2]):
    Bijection[(A1,B1,C1), (A2,B2,C2)] = new Bijection[(A1,B1,C1), (A2,B2,C2)] {
      def apply(in: (A1,B1,C1)) = (ba(in._1), bb(in._2), bc(in._3))
      override def invert(out: (A2,B2,C2)) = (ba.invert(out._1), bb.invert(out._2), bc.invert(out._3))
    }
  implicit def tuple4[A1,B1,C1,D1,A2,B2,C2,D2](implicit ba: Bijection[A1,A2], bb: Bijection[B1,B2], bc: Bijection[C1,C2], bd: Bijection[D1,D2]):
    Bijection[(A1,B1,C1,D1), (A2,B2,C2,D2)] = new Bijection[(A1,B1,C1,D1), (A2,B2,C2,D2)] {
      def apply(in: (A1,B1,C1,D1)) = (ba(in._1), bb(in._2), bc(in._3), bd(in._4))
      override def invert(out: (A2,B2,C2,D2)) = (ba.invert(out._1), bb.invert(out._2), bc.invert(out._3), bd.invert(out._4))
    }
  implicit def tuple5[A1,B1,C1,D1,E1,A2,B2,C2,D2,E2](implicit ba: Bijection[A1,A2], bb: Bijection[B1,B2], bc: Bijection[C1,C2], bd: Bijection[D1,D2], be: Bijection[E1,E2]):
    Bijection[(A1,B1,C1,D1,E1), (A2,B2,C2,D2,E2)] = new Bijection[(A1,B1,C1,D1,E1), (A2,B2,C2,D2,E2)] {
      def apply(in: (A1,B1,C1,D1,E1)) = (ba(in._1), bb(in._2), bc(in._3), bd(in._4), be(in._5))
      override def invert(out: (A2,B2,C2,D2,E2)) = (ba.invert(out._1), bb.invert(out._2), bc.invert(out._3), bd.invert(out._4), be.invert(out._5))
    }
  implicit def tuple6[A1,B1,C1,D1,E1,F1,A2,B2,C2,D2,E2,F2](implicit ba: Bijection[A1,A2], bb: Bijection[B1,B2], bc: Bijection[C1,C2], bd: Bijection[D1,D2], be: Bijection[E1,E2], bf: Bijection[F1,F2]):
    Bijection[(A1,B1,C1,D1,E1,F1), (A2,B2,C2,D2,E2,F2)] = new Bijection[(A1,B1,C1,D1,E1,F1), (A2,B2,C2,D2,E2,F2)] {
      def apply(in: (A1,B1,C1,D1,E1,F1)) = (ba(in._1), bb(in._2), bc(in._3), bd(in._4), be(in._5), bf(in._6))
      override def invert(out: (A2,B2,C2,D2,E2,F2)) = (ba.invert(out._1), bb.invert(out._2), bc.invert(out._3), bd.invert(out._4), be.invert(out._5), bf.invert(out._6))
    }
  implicit def tuple7[A1,B1,C1,D1,E1,F1,G1,A2,B2,C2,D2,E2,F2,G2](implicit ba: Bijection[A1,A2], bb: Bijection[B1,B2], bc: Bijection[C1,C2], bd: Bijection[D1,D2], be: Bijection[E1,E2], bf: Bijection[F1,F2], bg: Bijection[G1,G2]):
    Bijection[(A1,B1,C1,D1,E1,F1,G1), (A2,B2,C2,D2,E2,F2,G2)] = new Bijection[(A1,B1,C1,D1,E1,F1,G1), (A2,B2,C2,D2,E2,F2,G2)] {
      def apply(in: (A1,B1,C1,D1,E1,F1,G1)) = (ba(in._1), bb(in._2), bc(in._3), bd(in._4), be(in._5), bf(in._6), bg(in._7))
      override def invert(out: (A2,B2,C2,D2,E2,F2,G2)) = (ba.invert(out._1), bb.invert(out._2), bc.invert(out._3), bd.invert(out._4), be.invert(out._5), bf.invert(out._6), bg.invert(out._7))
    }
  implicit def tuple8[A1,B1,C1,D1,E1,F1,G1,H1,A2,B2,C2,D2,E2,F2,G2,H2](implicit ba: Bijection[A1,A2], bb: Bijection[B1,B2], bc: Bijection[C1,C2], bd: Bijection[D1,D2], be: Bijection[E1,E2], bf: Bijection[F1,F2], bg: Bijection[G1,G2], bh: Bijection[H1,H2]):
    Bijection[(A1,B1,C1,D1,E1,F1,G1,H1), (A2,B2,C2,D2,E2,F2,G2,H2)] = new Bijection[(A1,B1,C1,D1,E1,F1,G1,H1), (A2,B2,C2,D2,E2,F2,G2,H2)] {
      def apply(in: (A1,B1,C1,D1,E1,F1,G1,H1)) = (ba(in._1), bb(in._2), bc(in._3), bd(in._4), be(in._5), bf(in._6), bg(in._7), bh(in._8))
      override def invert(out: (A2,B2,C2,D2,E2,F2,G2,H2)) = (ba.invert(out._1), bb.invert(out._2), bc.invert(out._3), bd.invert(out._4), be.invert(out._5), bf.invert(out._6), bg.invert(out._7), bh.invert(out._8))
    }
  implicit def tuple9[A1,B1,C1,D1,E1,F1,G1,H1,I1,A2,B2,C2,D2,E2,F2,G2,H2,I2](implicit ba: Bijection[A1,A2], bb: Bijection[B1,B2], bc: Bijection[C1,C2], bd: Bijection[D1,D2], be: Bijection[E1,E2], bf: Bijection[F1,F2], bg: Bijection[G1,G2], bh: Bijection[H1,H2], bi: Bijection[I1,I2]):
    Bijection[(A1,B1,C1,D1,E1,F1,G1,H1,I1), (A2,B2,C2,D2,E2,F2,G2,H2,I2)] = new Bijection[(A1,B1,C1,D1,E1,F1,G1,H1,I1), (A2,B2,C2,D2,E2,F2,G2,H2,I2)] {
      def apply(in: (A1,B1,C1,D1,E1,F1,G1,H1,I1)) = (ba(in._1), bb(in._2), bc(in._3), bd(in._4), be(in._5), bf(in._6), bg(in._7), bh(in._8), bi(in._9))
      override def invert(out: (A2,B2,C2,D2,E2,F2,G2,H2,I2)) = (ba.invert(out._1), bb.invert(out._2), bc.invert(out._3), bd.invert(out._4), be.invert(out._5), bf.invert(out._6), bg.invert(out._7), bh.invert(out._8), bi.invert(out._9))
    }
  implicit def tuple10[A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,A2,B2,C2,D2,E2,F2,G2,H2,I2,J2](implicit ba: Bijection[A1,A2], bb: Bijection[B1,B2], bc: Bijection[C1,C2], bd: Bijection[D1,D2], be: Bijection[E1,E2], bf: Bijection[F1,F2], bg: Bijection[G1,G2], bh: Bijection[H1,H2], bi: Bijection[I1,I2], bj: Bijection[J1,J2]):
    Bijection[(A1,B1,C1,D1,E1,F1,G1,H1,I1,J1), (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2)] = new Bijection[(A1,B1,C1,D1,E1,F1,G1,H1,I1,J1), (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2)] {
      def apply(in: (A1,B1,C1,D1,E1,F1,G1,H1,I1,J1)) = (ba(in._1), bb(in._2), bc(in._3), bd(in._4), be(in._5), bf(in._6), bg(in._7), bh(in._8), bi(in._9), bj(in._10))
      override def invert(out: (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2)) = (ba.invert(out._1), bb.invert(out._2), bc.invert(out._3), bd.invert(out._4), be.invert(out._5), bf.invert(out._6), bg.invert(out._7), bh.invert(out._8), bi.invert(out._9), bj.invert(out._10))
    }
  implicit def tuple11[A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2](implicit ba: Bijection[A1,A2], bb: Bijection[B1,B2], bc: Bijection[C1,C2], bd: Bijection[D1,D2], be: Bijection[E1,E2], bf: Bijection[F1,F2], bg: Bijection[G1,G2], bh: Bijection[H1,H2], bi: Bijection[I1,I2], bj: Bijection[J1,J2], bk: Bijection[K1,K2]):
    Bijection[(A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1), (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2)] = new Bijection[(A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1), (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2)] {
      def apply(in: (A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1)) = (ba(in._1), bb(in._2), bc(in._3), bd(in._4), be(in._5), bf(in._6), bg(in._7), bh(in._8), bi(in._9), bj(in._10), bk(in._11))
      override def invert(out: (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2)) = (ba.invert(out._1), bb.invert(out._2), bc.invert(out._3), bd.invert(out._4), be.invert(out._5), bf.invert(out._6), bg.invert(out._7), bh.invert(out._8), bi.invert(out._9), bj.invert(out._10), bk.invert(out._11))
    }
  implicit def tuple12[A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2](implicit ba: Bijection[A1,A2], bb: Bijection[B1,B2], bc: Bijection[C1,C2], bd: Bijection[D1,D2], be: Bijection[E1,E2], bf: Bijection[F1,F2], bg: Bijection[G1,G2], bh: Bijection[H1,H2], bi: Bijection[I1,I2], bj: Bijection[J1,J2], bk: Bijection[K1,K2], bl: Bijection[L1,L2]):
    Bijection[(A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1), (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2)] = new Bijection[(A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1), (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2)] {
      def apply(in: (A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1)) = (ba(in._1), bb(in._2), bc(in._3), bd(in._4), be(in._5), bf(in._6), bg(in._7), bh(in._8), bi(in._9), bj(in._10), bk(in._11), bl(in._12))
      override def invert(out: (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2)) = (ba.invert(out._1), bb.invert(out._2), bc.invert(out._3), bd.invert(out._4), be.invert(out._5), bf.invert(out._6), bg.invert(out._7), bh.invert(out._8), bi.invert(out._9), bj.invert(out._10), bk.invert(out._11), bl.invert(out._12))
    }
  implicit def tuple13[A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2](implicit ba: Bijection[A1,A2], bb: Bijection[B1,B2], bc: Bijection[C1,C2], bd: Bijection[D1,D2], be: Bijection[E1,E2], bf: Bijection[F1,F2], bg: Bijection[G1,G2], bh: Bijection[H1,H2], bi: Bijection[I1,I2], bj: Bijection[J1,J2], bk: Bijection[K1,K2], bl: Bijection[L1,L2], bm: Bijection[M1,M2]):
    Bijection[(A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1), (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2)] = new Bijection[(A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1), (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2)] {
      def apply(in: (A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1)) = (ba(in._1), bb(in._2), bc(in._3), bd(in._4), be(in._5), bf(in._6), bg(in._7), bh(in._8), bi(in._9), bj(in._10), bk(in._11), bl(in._12), bm(in._13))
      override def invert(out: (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2)) = (ba.invert(out._1), bb.invert(out._2), bc.invert(out._3), bd.invert(out._4), be.invert(out._5), bf.invert(out._6), bg.invert(out._7), bh.invert(out._8), bi.invert(out._9), bj.invert(out._10), bk.invert(out._11), bl.invert(out._12), bm.invert(out._13))
    }
  implicit def tuple14[A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2](implicit ba: Bijection[A1,A2], bb: Bijection[B1,B2], bc: Bijection[C1,C2], bd: Bijection[D1,D2], be: Bijection[E1,E2], bf: Bijection[F1,F2], bg: Bijection[G1,G2], bh: Bijection[H1,H2], bi: Bijection[I1,I2], bj: Bijection[J1,J2], bk: Bijection[K1,K2], bl: Bijection[L1,L2], bm: Bijection[M1,M2], bn: Bijection[N1,N2]):
    Bijection[(A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1), (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2)] = new Bijection[(A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1), (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2)] {
      def apply(in: (A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1)) = (ba(in._1), bb(in._2), bc(in._3), bd(in._4), be(in._5), bf(in._6), bg(in._7), bh(in._8), bi(in._9), bj(in._10), bk(in._11), bl(in._12), bm(in._13), bn(in._14))
      override def invert(out: (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2)) = (ba.invert(out._1), bb.invert(out._2), bc.invert(out._3), bd.invert(out._4), be.invert(out._5), bf.invert(out._6), bg.invert(out._7), bh.invert(out._8), bi.invert(out._9), bj.invert(out._10), bk.invert(out._11), bl.invert(out._12), bm.invert(out._13), bn.invert(out._14))
    }
  implicit def tuple15[A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2](implicit ba: Bijection[A1,A2], bb: Bijection[B1,B2], bc: Bijection[C1,C2], bd: Bijection[D1,D2], be: Bijection[E1,E2], bf: Bijection[F1,F2], bg: Bijection[G1,G2], bh: Bijection[H1,H2], bi: Bijection[I1,I2], bj: Bijection[J1,J2], bk: Bijection[K1,K2], bl: Bijection[L1,L2], bm: Bijection[M1,M2], bn: Bijection[N1,N2], bo: Bijection[O1,O2]):
    Bijection[(A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1), (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2)] = new Bijection[(A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1), (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2)] {
      def apply(in: (A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1)) = (ba(in._1), bb(in._2), bc(in._3), bd(in._4), be(in._5), bf(in._6), bg(in._7), bh(in._8), bi(in._9), bj(in._10), bk(in._11), bl(in._12), bm(in._13), bn(in._14), bo(in._15))
      override def invert(out: (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2)) = (ba.invert(out._1), bb.invert(out._2), bc.invert(out._3), bd.invert(out._4), be.invert(out._5), bf.invert(out._6), bg.invert(out._7), bh.invert(out._8), bi.invert(out._9), bj.invert(out._10), bk.invert(out._11), bl.invert(out._12), bm.invert(out._13), bn.invert(out._14), bo.invert(out._15))
    }
  implicit def tuple16[A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2,P2](implicit ba: Bijection[A1,A2], bb: Bijection[B1,B2], bc: Bijection[C1,C2], bd: Bijection[D1,D2], be: Bijection[E1,E2], bf: Bijection[F1,F2], bg: Bijection[G1,G2], bh: Bijection[H1,H2], bi: Bijection[I1,I2], bj: Bijection[J1,J2], bk: Bijection[K1,K2], bl: Bijection[L1,L2], bm: Bijection[M1,M2], bn: Bijection[N1,N2], bo: Bijection[O1,O2], bp: Bijection[P1,P2]):
    Bijection[(A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1), (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2,P2)] = new Bijection[(A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1), (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2,P2)] {
      def apply(in: (A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1)) = (ba(in._1), bb(in._2), bc(in._3), bd(in._4), be(in._5), bf(in._6), bg(in._7), bh(in._8), bi(in._9), bj(in._10), bk(in._11), bl(in._12), bm(in._13), bn(in._14), bo(in._15), bp(in._16))
      override def invert(out: (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2,P2)) = (ba.invert(out._1), bb.invert(out._2), bc.invert(out._3), bd.invert(out._4), be.invert(out._5), bf.invert(out._6), bg.invert(out._7), bh.invert(out._8), bi.invert(out._9), bj.invert(out._10), bk.invert(out._11), bl.invert(out._12), bm.invert(out._13), bn.invert(out._14), bo.invert(out._15), bp.invert(out._16))
    }
  implicit def tuple17[A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2,P2,Q2](implicit ba: Bijection[A1,A2], bb: Bijection[B1,B2], bc: Bijection[C1,C2], bd: Bijection[D1,D2], be: Bijection[E1,E2], bf: Bijection[F1,F2], bg: Bijection[G1,G2], bh: Bijection[H1,H2], bi: Bijection[I1,I2], bj: Bijection[J1,J2], bk: Bijection[K1,K2], bl: Bijection[L1,L2], bm: Bijection[M1,M2], bn: Bijection[N1,N2], bo: Bijection[O1,O2], bp: Bijection[P1,P2], bq: Bijection[Q1,Q2]):
    Bijection[(A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1), (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2,P2,Q2)] = new Bijection[(A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1), (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2,P2,Q2)] {
      def apply(in: (A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1)) = (ba(in._1), bb(in._2), bc(in._3), bd(in._4), be(in._5), bf(in._6), bg(in._7), bh(in._8), bi(in._9), bj(in._10), bk(in._11), bl(in._12), bm(in._13), bn(in._14), bo(in._15), bp(in._16), bq(in._17))
      override def invert(out: (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2,P2,Q2)) = (ba.invert(out._1), bb.invert(out._2), bc.invert(out._3), bd.invert(out._4), be.invert(out._5), bf.invert(out._6), bg.invert(out._7), bh.invert(out._8), bi.invert(out._9), bj.invert(out._10), bk.invert(out._11), bl.invert(out._12), bm.invert(out._13), bn.invert(out._14), bo.invert(out._15), bp.invert(out._16), bq.invert(out._17))
    }
  implicit def tuple18[A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2,P2,Q2,R2](implicit ba: Bijection[A1,A2], bb: Bijection[B1,B2], bc: Bijection[C1,C2], bd: Bijection[D1,D2], be: Bijection[E1,E2], bf: Bijection[F1,F2], bg: Bijection[G1,G2], bh: Bijection[H1,H2], bi: Bijection[I1,I2], bj: Bijection[J1,J2], bk: Bijection[K1,K2], bl: Bijection[L1,L2], bm: Bijection[M1,M2], bn: Bijection[N1,N2], bo: Bijection[O1,O2], bp: Bijection[P1,P2], bq: Bijection[Q1,Q2], br: Bijection[R1,R2]):
    Bijection[(A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1), (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2,P2,Q2,R2)] = new Bijection[(A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1), (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2,P2,Q2,R2)] {
      def apply(in: (A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1)) = (ba(in._1), bb(in._2), bc(in._3), bd(in._4), be(in._5), bf(in._6), bg(in._7), bh(in._8), bi(in._9), bj(in._10), bk(in._11), bl(in._12), bm(in._13), bn(in._14), bo(in._15), bp(in._16), bq(in._17), br(in._18))
      override def invert(out: (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2,P2,Q2,R2)) = (ba.invert(out._1), bb.invert(out._2), bc.invert(out._3), bd.invert(out._4), be.invert(out._5), bf.invert(out._6), bg.invert(out._7), bh.invert(out._8), bi.invert(out._9), bj.invert(out._10), bk.invert(out._11), bl.invert(out._12), bm.invert(out._13), bn.invert(out._14), bo.invert(out._15), bp.invert(out._16), bq.invert(out._17), br.invert(out._18))
    }
  implicit def tuple19[A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2,P2,Q2,R2,S2](implicit ba: Bijection[A1,A2], bb: Bijection[B1,B2], bc: Bijection[C1,C2], bd: Bijection[D1,D2], be: Bijection[E1,E2], bf: Bijection[F1,F2], bg: Bijection[G1,G2], bh: Bijection[H1,H2], bi: Bijection[I1,I2], bj: Bijection[J1,J2], bk: Bijection[K1,K2], bl: Bijection[L1,L2], bm: Bijection[M1,M2], bn: Bijection[N1,N2], bo: Bijection[O1,O2], bp: Bijection[P1,P2], bq: Bijection[Q1,Q2], br: Bijection[R1,R2], bs: Bijection[S1,S2]):
    Bijection[(A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1), (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2,P2,Q2,R2,S2)] = new Bijection[(A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1), (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2,P2,Q2,R2,S2)] {
      def apply(in: (A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1)) = (ba(in._1), bb(in._2), bc(in._3), bd(in._4), be(in._5), bf(in._6), bg(in._7), bh(in._8), bi(in._9), bj(in._10), bk(in._11), bl(in._12), bm(in._13), bn(in._14), bo(in._15), bp(in._16), bq(in._17), br(in._18), bs(in._19))
      override def invert(out: (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2,P2,Q2,R2,S2)) = (ba.invert(out._1), bb.invert(out._2), bc.invert(out._3), bd.invert(out._4), be.invert(out._5), bf.invert(out._6), bg.invert(out._7), bh.invert(out._8), bi.invert(out._9), bj.invert(out._10), bk.invert(out._11), bl.invert(out._12), bm.invert(out._13), bn.invert(out._14), bo.invert(out._15), bp.invert(out._16), bq.invert(out._17), br.invert(out._18), bs.invert(out._19))
    }
  implicit def tuple20[A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1,A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2,P2,Q2,R2,S2,T2](implicit ba: Bijection[A1,A2], bb: Bijection[B1,B2], bc: Bijection[C1,C2], bd: Bijection[D1,D2], be: Bijection[E1,E2], bf: Bijection[F1,F2], bg: Bijection[G1,G2], bh: Bijection[H1,H2], bi: Bijection[I1,I2], bj: Bijection[J1,J2], bk: Bijection[K1,K2], bl: Bijection[L1,L2], bm: Bijection[M1,M2], bn: Bijection[N1,N2], bo: Bijection[O1,O2], bp: Bijection[P1,P2], bq: Bijection[Q1,Q2], br: Bijection[R1,R2], bs: Bijection[S1,S2], bt: Bijection[T1,T2]):
    Bijection[(A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1), (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2,P2,Q2,R2,S2,T2)] = new Bijection[(A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1), (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2,P2,Q2,R2,S2,T2)] {
      def apply(in: (A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1)) = (ba(in._1), bb(in._2), bc(in._3), bd(in._4), be(in._5), bf(in._6), bg(in._7), bh(in._8), bi(in._9), bj(in._10), bk(in._11), bl(in._12), bm(in._13), bn(in._14), bo(in._15), bp(in._16), bq(in._17), br(in._18), bs(in._19), bt(in._20))
      override def invert(out: (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2,P2,Q2,R2,S2,T2)) = (ba.invert(out._1), bb.invert(out._2), bc.invert(out._3), bd.invert(out._4), be.invert(out._5), bf.invert(out._6), bg.invert(out._7), bh.invert(out._8), bi.invert(out._9), bj.invert(out._10), bk.invert(out._11), bl.invert(out._12), bm.invert(out._13), bn.invert(out._14), bo.invert(out._15), bp.invert(out._16), bq.invert(out._17), br.invert(out._18), bs.invert(out._19), bt.invert(out._20))
    }
  implicit def tuple21[A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1,U1,A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2,P2,Q2,R2,S2,T2,U2](implicit ba: Bijection[A1,A2], bb: Bijection[B1,B2], bc: Bijection[C1,C2], bd: Bijection[D1,D2], be: Bijection[E1,E2], bf: Bijection[F1,F2], bg: Bijection[G1,G2], bh: Bijection[H1,H2], bi: Bijection[I1,I2], bj: Bijection[J1,J2], bk: Bijection[K1,K2], bl: Bijection[L1,L2], bm: Bijection[M1,M2], bn: Bijection[N1,N2], bo: Bijection[O1,O2], bp: Bijection[P1,P2], bq: Bijection[Q1,Q2], br: Bijection[R1,R2], bs: Bijection[S1,S2], bt: Bijection[T1,T2], bu: Bijection[U1,U2]):
    Bijection[(A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1,U1), (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2,P2,Q2,R2,S2,T2,U2)] = new Bijection[(A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1,U1), (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2,P2,Q2,R2,S2,T2,U2)] {
      def apply(in: (A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1,U1)) = (ba(in._1), bb(in._2), bc(in._3), bd(in._4), be(in._5), bf(in._6), bg(in._7), bh(in._8), bi(in._9), bj(in._10), bk(in._11), bl(in._12), bm(in._13), bn(in._14), bo(in._15), bp(in._16), bq(in._17), br(in._18), bs(in._19), bt(in._20), bu(in._21))
      override def invert(out: (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2,P2,Q2,R2,S2,T2,U2)) = (ba.invert(out._1), bb.invert(out._2), bc.invert(out._3), bd.invert(out._4), be.invert(out._5), bf.invert(out._6), bg.invert(out._7), bh.invert(out._8), bi.invert(out._9), bj.invert(out._10), bk.invert(out._11), bl.invert(out._12), bm.invert(out._13), bn.invert(out._14), bo.invert(out._15), bp.invert(out._16), bq.invert(out._17), br.invert(out._18), bs.invert(out._19), bt.invert(out._20), bu.invert(out._21))
    }
  implicit def tuple22[A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1,U1,V1,A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2,P2,Q2,R2,S2,T2,U2,V2](implicit ba: Bijection[A1,A2], bb: Bijection[B1,B2], bc: Bijection[C1,C2], bd: Bijection[D1,D2], be: Bijection[E1,E2], bf: Bijection[F1,F2], bg: Bijection[G1,G2], bh: Bijection[H1,H2], bi: Bijection[I1,I2], bj: Bijection[J1,J2], bk: Bijection[K1,K2], bl: Bijection[L1,L2], bm: Bijection[M1,M2], bn: Bijection[N1,N2], bo: Bijection[O1,O2], bp: Bijection[P1,P2], bq: Bijection[Q1,Q2], br: Bijection[R1,R2], bs: Bijection[S1,S2], bt: Bijection[T1,T2], bu: Bijection[U1,U2], bv: Bijection[V1,V2]):
    Bijection[(A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1,U1,V1), (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2,P2,Q2,R2,S2,T2,U2,V2)] = new Bijection[(A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1,U1,V1), (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2,P2,Q2,R2,S2,T2,U2,V2)] {
      def apply(in: (A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1,U1,V1)) = (ba(in._1), bb(in._2), bc(in._3), bd(in._4), be(in._5), bf(in._6), bg(in._7), bh(in._8), bi(in._9), bj(in._10), bk(in._11), bl(in._12), bm(in._13), bn(in._14), bo(in._15), bp(in._16), bq(in._17), br(in._18), bs(in._19), bt(in._20), bu(in._21), bv(in._22))
      override def invert(out: (A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2,P2,Q2,R2,S2,T2,U2,V2)) = (ba.invert(out._1), bb.invert(out._2), bc.invert(out._3), bd.invert(out._4), be.invert(out._5), bf.invert(out._6), bg.invert(out._7), bh.invert(out._8), bi.invert(out._9), bj.invert(out._10), bk.invert(out._11), bl.invert(out._12), bm.invert(out._13), bn.invert(out._14), bo.invert(out._15), bp.invert(out._16), bq.invert(out._17), br.invert(out._18), bs.invert(out._19), bt.invert(out._20), bu.invert(out._21), bv.invert(out._22))
    }
}
